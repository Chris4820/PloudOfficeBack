{"version":3,"file":"store.middleware.js","sourceRoot":"/","sources":["middleware/store.middleware.ts"],"names":[],"mappings":";;;;;AAOA,0CAuBC;AA5BD,gEAA+C;AAC/C,iEAAuE;AAGvE,6BAA6B;AACtB,KAAK,UAAU,eAAe,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;IACnF,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,CAAA;IAEvC,IAAI,CAAC,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,OAAO,IAAI,CAAC,IAAI,oCAAqB,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAC9D,CAAC;IAED,IAAI,CAAC;QACH,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,sBAAuB,CAAC;QACnD,MAAM,OAAO,GAAG,sBAAG,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAe,CAAC;QAExD,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YACnD,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;YAC9B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;YAC9B,OAAO,IAAI,EAAE,CAAC;QAChB,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,MAAM,IAAI,oCAAqB,CAAC,iBAAiB,CAAC,CAAA;QACpD,CAAC;IACH,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,GAAG,CAAC,CAAC;IACZ,CAAC;AACH,CAAC","sourcesContent":["// middleware/auth.middleware.ts\r\nimport { Request, Response, NextFunction } from 'express';\r\nimport jwt, { JwtPayload } from 'jsonwebtoken';\r\nimport { UnauthorizedException } from '../commons/errors/custom.error';\r\n\r\n\r\n// Middleware de autenticação\r\nexport async function StoreMiddleware(req: Request, res: Response, next: NextFunction) {\r\n  const token = req.headers['x-store-id']\r\n\r\n  if (!token || typeof token !== 'string') {\r\n    console.log(\"1\");\r\n    return next(new UnauthorizedException('Sessão não existe'));\r\n  }\r\n\r\n  try {\r\n    const secret = process.env.JWT_SECRET_TOKEN_STORE!;\r\n    const decoded = jwt.verify(token, secret) as JwtPayload;\r\n\r\n    if (typeof decoded === 'object' && decoded.storeId) {\r\n      req.storeId = decoded.storeId;\r\n      req.isOwner = decoded.isOwner;\r\n      return next();\r\n    } else {\r\n      console.log(\"2\");\r\n      throw new UnauthorizedException(\"Sessão inválida\")\r\n    }\r\n  } catch (err) {\r\n    next(err);\r\n  }\r\n}\r\n"]}