{"version":3,"file":"error.middleware.js","sourceRoot":"/","sources":["middleware/error.middleware.ts"],"names":[],"mappings":";;AAIA,0CAkBC;AApBD,iEAA+D;AAE/D,SAAgB,eAAe,CAC7B,GAAU,EACV,GAAY,EACZ,GAAa,EACb,IAAkB;IAElB,IAAI,GAAG,YAAY,4BAAa,EAAE,CAAC;QACjC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC;YACjC,UAAU,EAAE,GAAG,CAAC,MAAM;YACtB,OAAO,EAAE,GAAG,CAAC,OAAO;SACrB,CAAC,CAAC;IACL,CAAC;IACD,mCAAmC;IACnC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACnB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;QAC1B,UAAU,EAAE,GAAG;QACf,OAAO,EAAE,uBAAuB;KACjC,CAAC,CAAC;AACL,CAAC","sourcesContent":["// middlewares/error.middleware.ts\r\nimport { Request, Response, NextFunction } from 'express';\r\nimport { HttpException } from '../commons/errors/custom.error';\r\n\r\nexport function errorMiddleware(\r\n  err: Error,\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) {\r\n  if (err instanceof HttpException) {\r\n    return res.status(err.status).json({\r\n      statusCode: err.status,\r\n      message: err.message,\r\n    });\r\n  }\r\n  // fallback para erros n√£o tratados\r\n  console.error(err);\r\n  return res.status(500).json({\r\n    statusCode: 500,\r\n    message: 'Internal Server Error',\r\n  });\r\n}\r\n"]}