{"version":3,"file":"appointment.controller.js","sourceRoot":"/","sources":["modules/appointment/appointment.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import type { NextFunction, Request, Response } from \"express\";\r\nimport { UpdateLastVisit, upsertClient } from \"../client/client.service\";\r\nimport { createBooking } from \"./appointment.service\";\r\nimport { sendConfirmAppointment } from \"../../commons/email/email.service\";\r\nimport { getStoreByDomain } from \"../shop/shop.service\";\r\nimport prisma from \"../../libs/prisma\";\r\nimport { addMinutes, format } from \"date-fns\";\r\nimport { pt } from 'date-fns/locale';\r\n\r\ntype AppointmentProps = {\r\n  startDate: Date,\r\n  endDate: Date | undefined,\r\n  storeDomain: string,\r\n  client: {\r\n    name: string,\r\n    email: string,\r\n    phone: string,\r\n    notes?: string,\r\n  },\r\n  store: {\r\n    id: number\r\n  },\r\n  collaboratorId: number,\r\n  service: {\r\n    id: number,\r\n    duration: number,\r\n    price: number,\r\n  },\r\n}\r\n\r\nexport async function CreateNewAppointmentExternalController(req: Request, res: Response, next: NextFunction) {\r\n  console.log(\"Bateu\");\r\n  //Cliente criou a marcção no template\r\n  try {\r\n    const data = req.body as AppointmentProps;\r\n    console.log(data)\r\n\r\n    const rawHeader = req.get('X-Site-Origin');\r\n    const storeDomain = Array.isArray(rawHeader) ? rawHeader[0] : rawHeader;\r\n    const store = await getStoreByDomain(storeDomain === 'localhost' ? 'barber.ploudstore.com' : storeDomain);\r\n    if (!store) {\r\n      return res.status(400).json({ message: 'Essa loja não existe' })\r\n    };\r\n\r\n    const collaborator = await prisma.collaborator.findUnique({\r\n      where: {\r\n        shopId_userId: {\r\n          shopId: store.id,\r\n          userId: data.collaboratorId, // que neste caso é o userId\r\n        },\r\n      },\r\n    });\r\n\r\n    if (!collaborator) {\r\n      return res.status(404).json({ message: 'Colaborador não encontrado' });\r\n    }\r\n    const service = await prisma.collaboratorService.findUnique({\r\n      where: {\r\n        collaboratorId_serviceId: {\r\n          serviceId: data.service.id,\r\n          collaboratorId: collaborator.id,\r\n        },\r\n        isActive: true,\r\n      },\r\n      select: {\r\n        Service: {\r\n          select: {\r\n            id: true,\r\n            name: true,\r\n          }\r\n        },\r\n        duration: true,\r\n        price: true,\r\n      }\r\n    })\r\n    console.log(service);\r\n\r\n    if (!service) {\r\n      return res.status(400).json({ message: 'Esse serviço não existe' })\r\n    }\r\n    //Atualizar ou criar cliente e trazer o ID\r\n    const client = await upsertClient(store.id, data.client.name, data.client.email, data.client.notes, data.client.phone);\r\n    const endDate = addMinutes(data.startDate, service.duration);\r\n    const appointment = await createBooking(\r\n      data.startDate,\r\n      endDate,\r\n      store.id,\r\n      collaborator.id,\r\n      client.id,\r\n      service.duration,\r\n      service.Service.id,\r\n      service.price,\r\n    )\r\n    const formattedDate = format(new Date(data.startDate), \"EEEE, dd 'de' MMMM 'de' yyyy 'às' HH:mm\", {\r\n      locale: pt,\r\n    });\r\n    sendConfirmAppointment({\r\n      userName: client.name || \"\",\r\n      email: client.email || \"\",\r\n      collaboratorName: \"Christophe Teste\",\r\n      serviceName: service.Service.name || \"Lavar os dentes\",\r\n      startDate: formattedDate,\r\n      storeName: store.name || \"Loja nome\",\r\n      cancelLink: appointment.uuid || \"\",\r\n    })\r\n\r\n    UpdateLastVisit(client.id, store.id, data.startDate);\r\n\r\n    return res.status(200).json({ message: 'Marcação criada com sucesso' })\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n    return res.status(500).json({ message: 'Marcação criada com sucesso' })\r\n  }\r\n}"]}