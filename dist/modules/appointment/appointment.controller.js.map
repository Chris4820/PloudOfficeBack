{"version":3,"file":"appointment.controller.js","sourceRoot":"/","sources":["modules/appointment/appointment.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import type { NextFunction, Request, Response } from \"express\";\r\nimport { UpdateLastVisit } from \"../client/client.service\";\r\nimport { CreateAppointment, deleteAppointment, getAppointmentById, getAppointmentClient, updateAppointment, updateAppointmentStatus, updateAppointmentStatusByUUID } from \"./appointment.service\";\r\nimport { sendConfirmAppointment } from \"../../commons/email/email.service\";\r\nimport { getStoreByDomain } from \"../shop/shop.service\";\r\nimport prisma from \"../../libs/prisma\";\r\nimport { addMinutes, format } from \"date-fns\";\r\nimport { pt } from 'date-fns/locale';\r\nimport type { CreateEventFormData } from \"../calendar/schema/create-appointment\";\r\nimport type { AppointmentType } from \"../calendar/types/appointment.type\";\r\nimport { BadRequestException } from \"../../commons/errors/custom.error\";\r\nimport { AppointmentStatus } from \"@prisma/client\";\r\nimport type { EditEventFormData } from \"./schema/update.schema\";\r\n\r\ntype AppointmentProps = {\r\n  startDate: Date,\r\n  endDate: Date | undefined,\r\n  storeDomain: string,\r\n  client: {\r\n    name: string,\r\n    email: string,\r\n    phone: string,\r\n    notes?: string,\r\n  },\r\n  store: {\r\n    id: number\r\n  },\r\n  collaboratorId: number,\r\n  service: {\r\n    id: number,\r\n    duration: number,\r\n    price: number,\r\n  },\r\n}\r\n\r\nexport async function CreateNewAppointmentExternalController(req: Request, res: Response, next: NextFunction) {\r\n  //Cliente criou a marcção no template\r\n  try {\r\n    const data = req.body as AppointmentProps;\r\n    console.log(data)\r\n\r\n    const rawHeader = req.get('X-Site-Origin');\r\n    const storeDomain = Array.isArray(rawHeader) ? rawHeader[0] : rawHeader;\r\n    const store = await getStoreByDomain(storeDomain === 'localhost:3001' ? 'barber.ploudstore.com' : storeDomain);\r\n    if (!store) {\r\n      return res.status(400).json({ message: 'Essa loja não existe' })\r\n    };\r\n\r\n    const collaborator = await prisma.collaboratorShop.findUnique({\r\n      where: {\r\n        shopId_userId: {\r\n          shopId: store.id,\r\n          userId: data.collaboratorId, // que neste caso é o userId\r\n        },\r\n      },\r\n    });\r\n\r\n    if (!collaborator) {\r\n      return res.status(404).json({ message: 'Colaborador não encontrado' });\r\n    }\r\n    const service = await prisma.collaboratorService.findUnique({\r\n      where: {\r\n        collaboratorId_serviceId: {\r\n          serviceId: data.service.id,\r\n          collaboratorId: collaborator.id,\r\n        },\r\n        isActive: true,\r\n      },\r\n      select: {\r\n        Service: {\r\n          select: {\r\n            id: true,\r\n            name: true,\r\n          }\r\n        },\r\n        duration: true,\r\n        price: true,\r\n      }\r\n    })\r\n\r\n    if (!service) {\r\n      return res.status(400).json({ message: 'Esse serviço não existe' })\r\n    }\r\n    //Atualizar ou criar cliente e trazer o ID\r\n    //const client = await upsertClient(store.id, data.client.name, data.client.email, data.client.notes, data.client.phone);\r\n    const endDate = addMinutes(data.startDate, service.duration);\r\n    const appointment = await CreateAppointment(\r\n      store.id,\r\n      {\r\n        start: data.startDate,\r\n        collabId: collaborator.id,\r\n        duration: service.duration,\r\n        end: endDate,\r\n        serviceId: service.Service.id,\r\n      },\r\n      {\r\n        Client: {\r\n          name: data.client.name,\r\n          email: data.client.email,\r\n          notes: data.client.notes,\r\n          phone: data.client.phone,\r\n        },\r\n      }\r\n    )\r\n    const formattedDate = format(new Date(data.startDate), \"EEEE, dd 'de' MMMM 'de' yyyy 'às' HH:mm\", {\r\n      locale: pt,\r\n    });\r\n\r\n    // Executar operações não críticas em paralelo\r\n    await Promise.all([\r\n      sendConfirmAppointment({\r\n        userName: appointment.Client.name || \"\",\r\n        email: appointment.Client.email || \"\",\r\n        collaboratorName: \"Christophe Teste\",\r\n        serviceName: service.Service.name || \"Lavar os dentes\",\r\n        startDate: formattedDate,\r\n        storeName: store.name || \"Loja nome\",\r\n        cancelLink: `${storeDomain}/cancel?id=${appointment.uuid}`,\r\n      }),\r\n      UpdateLastVisit(appointment.Client.id, store.id, data.startDate),\r\n    ]);\r\n\r\n    return res.status(200).json({ message: 'Marcação criada com sucesso' })\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n    return res.status(500).json({ message: 'Marcação criada com sucesso' })\r\n  }\r\n}\r\n\r\n\r\nexport async function CreateNewAppoitmentInternalController(req: Request, res: Response, next: NextFunction) {\r\n  try {\r\n    const data = req.body as CreateEventFormData;\r\n\r\n    const endDate = new Date(data.start);\r\n    endDate.setMinutes(endDate.getMinutes() + data.duration); // N é o número de minutos a adicionar\r\n\r\n    const CreateAppointmentProps: AppointmentType = {\r\n      collabId: data.collabId,\r\n      duration: data.duration,\r\n      end: endDate,\r\n      start: data.start,\r\n      serviceId: data.serviceId,\r\n    }\r\n    await CreateAppointment(req.storeId, CreateAppointmentProps, data);\r\n    return res.status(201).json({ message: 'Ok' });\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n}\r\n\r\nexport async function GetAppointmentClientController(req: Request, res: Response, next: NextFunction) {\r\n  try {\r\n    const { id } = req.params;\r\n    const appointments = await getAppointmentClient(Number(id), req.storeId)\r\n    return res.status(200).json(appointments);\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n}\r\n\r\n\r\nexport async function GetAppointmentByIdController(req: Request, res: Response, next: NextFunction) {\r\n  try {\r\n    const { id } = req.params;\r\n    console.log(id);\r\n    const appointments = await getAppointmentById(Number(id), req.storeId)\r\n    return res.status(200).json(appointments);\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n}\r\n\r\n\r\nexport async function UpdateAppointmentStatusController(req: Request, res: Response, next: NextFunction) {\r\n  try {\r\n    const { id } = req.params;\r\n    const { status } = req.query;\r\n\r\n\r\n\r\n    if (!status || !Object.values(AppointmentStatus).includes(status as AppointmentStatus)) {\r\n      throw new BadRequestException(\"Status inválido\");\r\n    }\r\n\r\n    await updateAppointmentStatus(Number(id), req.storeId, status as AppointmentStatus);\r\n    return res.status(200).json({ message: 'Cancelado com sucesso' });\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n}\r\n\r\nexport async function DeleteAppointmentController(req: Request, res: Response, next: NextFunction) {\r\n  try {\r\n    const { id } = req.params;\r\n    await deleteAppointment(Number(id), req.storeId)\r\n    return res.status(203).json({ message: 'Ok' })\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n}\r\n\r\nexport async function UpdateAppointmentController(req: Request, res: Response, next: NextFunction) {\r\n  try {\r\n    const data = req.body as EditEventFormData;\r\n    const { id } = req.params;\r\n    const endDate = new Date(data.start);\r\n    endDate.setMinutes(endDate.getMinutes() + data.duration); // N é o número de minutos a adicionar\r\n    await updateAppointment(Number(id), req.storeId, data, endDate);\r\n    return res.status(200).json({ message: 'OK' })\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n}\r\n\r\n\r\nexport async function CancelAppointmentExternalController(req: Request, res: Response, next: NextFunction) {\r\n  try {\r\n    const rawHeader = req.get('X-Site-Origin');\r\n    const storeDomain = Array.isArray(rawHeader) ? rawHeader[0] : rawHeader;\r\n    const store = await getStoreByDomain(storeDomain === 'localhost' ? 'barber.ploudstore.com' : storeDomain);\r\n    if (!store) {\r\n      return res.status(400).json({ message: 'Essa loja não existe' })\r\n    };\r\n    const { id } = req.query;\r\n    if (!id || id === \"\" || typeof id !== \"string\") {\r\n      throw new BadRequestException(\"ID é obrigatório\");\r\n    }\r\n    console.log(\"Sim\");\r\n    console.log(store.id, id);\r\n    await updateAppointmentStatusByUUID(store.id, id, AppointmentStatus.CANCELED);\r\n    return res.status(200).json({ message: 'Cancelado com sucesso' });\r\n\r\n  } catch (error) {\r\n    console.log(\"Não\")\r\n    next(error);\r\n  }\r\n}\r\n"]}