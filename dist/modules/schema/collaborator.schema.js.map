{"version":3,"file":"collaborator.schema.js","sourceRoot":"/","sources":["modules/schema/collaborator.schema.ts"],"names":[],"mappings":";;;AAAA,6BAAwB;AAExB,uDAAuD;AAC1C,QAAA,6BAA6B,GAAG,OAAC,CAAC,MAAM,CAAC;IACpD,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE;SACd,QAAQ,CAAC,4BAA4B,CAAC;SACtC,GAAG,CAAC,MAAM,EAAE,uBAAuB,CAAC;IACvC,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,4BAA4B,CAAC;IACjE,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,4BAA4B,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,0BAA0B,CAAC;IACpG,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE;IACvC,QAAQ,EAAE,OAAC,CAAC,OAAO,EAAE;CACtB,CAAC,CAAC","sourcesContent":["import { z } from \"zod\";\r\n\r\n// Schema para validação no backend (preço como number)\r\nexport const EditServiceCollaboratorSchema = z.object({\r\n  price: z.number()\r\n    .positive(\"Preço deve ser maior que 0\")\r\n    .max(999999, \"Preço máximo excedido\"),\r\n  collabId: z.number().int().positive(\"ID do colaborador inválido\"),\r\n  duration: z.number().int().min(5, \"Duração mínima é 5 minutos\").max(480, \"Duração máxima é 8 horas\"),\r\n  notes: z.string().optional().nullable(),\r\n  isActive: z.boolean()\r\n});\r\n\r\n// Export the inferred type\r\nexport type EditServiceCollabFormData = z.infer<typeof EditServiceCollaboratorSchema>;"]}