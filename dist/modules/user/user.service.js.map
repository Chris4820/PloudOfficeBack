{"version":3,"file":"user.service.js","sourceRoot":"/","sources":["modules/user/user.service.ts"],"names":[],"mappings":";;;;;AAMA,kCAcC;AAGD,gCASC;AAED,oCASC;AAGD,kDAWC;AAGD,8CASC;AArED,+DAAuC;AAMhC,KAAK,UAAU,WAAW,CAAC,MAAc;IAC9C,OAAO,MAAM,gBAAM,CAAC,YAAY,CAAC,UAAU,CAAC;QAC1C,KAAK,EAAE;YACL,EAAE,EAAE,MAAM;SACX;QACD,MAAM,EAAE;YACN,EAAE,EAAE,IAAI;YACR,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,IAAI;YACf,KAAK,EAAE,IAAI;YACX,WAAW,EAAE,IAAI;SAClB;KACF,CAAC,CAAA;AACJ,CAAC;AAGM,KAAK,UAAU,UAAU,CAAC,IAAqB;IACpD,OAAO,MAAM,gBAAM,CAAC,YAAY,CAAC,MAAM,CAAC;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;SAC1B;KACF,CAAC,CAAA;AACJ,CAAC;AAEM,KAAK,UAAU,YAAY,CAAC,KAAa;IAC9C,OAAO,MAAM,gBAAM,CAAC,YAAY,CAAC,SAAS,CAAC;QACzC,KAAK,EAAE;YACL,KAAK,EAAE,KAAK;SACb;QACD,MAAM,EAAE;YACN,EAAE,EAAE,IAAI;SACT;KACF,CAAC,CAAA;AACJ,CAAC;AAGM,KAAK,UAAU,mBAAmB,CAAC,KAAa;IACrD,OAAO,MAAM,gBAAM,CAAC,YAAY,CAAC,UAAU,CAAC;QAC1C,KAAK,EAAE;YACL,KAAK,EAAE,KAAK;SACb;QACD,MAAM,EAAE;YACN,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,IAAI;SACZ;KACF,CAAC,CAAA;AACJ,CAAC;AAGM,KAAK,UAAU,iBAAiB,CAAC,MAAc,EAAE,WAAoB;IAC1E,OAAO,MAAM,gBAAM,CAAC,YAAY,CAAC,MAAM,CAAC;QACtC,KAAK,EAAE;YACL,EAAE,EAAE,MAAM;SACX;QACD,IAAI,EAAE;YACJ,WAAW,EAAE,WAAW;SACzB;KACF,CAAC,CAAC;AACL,CAAC","sourcesContent":["import prisma from \"../../libs/prisma\";\r\nimport type { CreateUserProps } from \"./types/user.type\";\r\n\r\n\r\n\r\n\r\nexport async function getUserById(userId: number) {\r\n  return await prisma.collaborator.findUnique({\r\n    where: {\r\n      id: userId,\r\n    },\r\n    select: {\r\n      id: true,\r\n      email: true,\r\n      name: true,\r\n      shortName: true,\r\n      theme: true,\r\n      sidebarOpen: true,\r\n    }\r\n  })\r\n}\r\n\r\n\r\nexport async function createUser(data: CreateUserProps) {\r\n  return await prisma.collaborator.create({\r\n    data: {\r\n      name: data.name,\r\n      email: data.email,\r\n      password: data.password,\r\n      shortName: data.shortName,\r\n    }\r\n  })\r\n}\r\n\r\nexport async function isEmailExist(email: string) {\r\n  return await prisma.collaborator.findFirst({\r\n    where: {\r\n      email: email,\r\n    },\r\n    select: {\r\n      id: true,\r\n    }\r\n  })\r\n}\r\n\r\n\r\nexport async function getUserExistByEmail(email: string) {\r\n  return await prisma.collaborator.findUnique({\r\n    where: {\r\n      email: email,\r\n    },\r\n    select: {\r\n      id: true,\r\n      name: true,\r\n      email: true,\r\n    }\r\n  })\r\n}\r\n\r\n\r\nexport async function updateUserSidebar(userId: number, sidebarOpen: boolean) {\r\n  return await prisma.collaborator.update({\r\n    where: {\r\n      id: userId,\r\n    },\r\n    data: {\r\n      sidebarOpen: sidebarOpen,\r\n    },\r\n  });\r\n}"]}