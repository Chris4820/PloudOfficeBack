{"version":3,"file":"collaborator.service.js","sourceRoot":"/","sources":["modules/collaborator/collaborator.service.ts"],"names":[],"mappings":";;;;;AAOA,kCAaC;AAGD,gDAsBC;AAED,oDAkBC;AAED,sDAYC;AAED,sDAeC;AAED,4EAwBC;AAID,wDA2CC;AAID,gDASC;AAED,4DA2BC;AAGD,gDAYC;AAjOD,+DAAuC;AAMhC,KAAK,UAAU,WAAW,CAAC,OAAe,EAAE,MAAc;IAC/D,OAAO,MAAM,gBAAM,CAAC,gBAAgB,CAAC,UAAU,CAAC;QAC9C,KAAK,EAAE;YACL,aAAa,EAAE;gBACb,MAAM,EAAE,OAAO;gBACf,MAAM;aACP;SACF;QACD,MAAM,EAAE;YACN,EAAE,EAAE,IAAI;YACR,MAAM,EAAE,IAAI;SACb;KACF,CAAC,CAAA;AACJ,CAAC;AAGM,KAAK,UAAU,kBAAkB,CAAC,OAAe,EAAE,MAAc,EAAE,OAAgB;IACxF,OAAO,MAAM,gBAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC;QAC5C,KAAK,EAAE;YACL,MAAM,EAAE,OAAO;YACf,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,iCAAiC;YACjE,MAAM,EAAE,UAAU;SACnB;QACD,MAAM,EAAE;YACN,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,IAAI;YACf,YAAY,EAAE;gBACZ,MAAM,EAAE;oBACN,EAAE,EAAE,IAAI;oBACR,IAAI,EAAE,IAAI;oBACV,SAAS,EAAE,IAAI;oBACf,QAAQ,EAAE,IAAI;oBACd,KAAK,EAAE,IAAI;iBACZ;aACF;SACF;KACF,CAAC,CAAA;AACJ,CAAC;AAEM,KAAK,UAAU,oBAAoB,CAAC,OAAe;IACxD,OAAO,MAAM,gBAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC;QAC5C,KAAK,EAAE;YACL,MAAM,EAAE,OAAO;YACf,MAAM,EAAE,SAAS;SAClB;QACD,MAAM,EAAE;YACN,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,IAAI;YACf,YAAY,EAAE;gBACZ,MAAM,EAAE;oBACN,EAAE,EAAE,IAAI;oBACR,KAAK,EAAE,IAAI;iBACZ;aACF;SACF;KACF,CAAC,CAAA;AACJ,CAAC;AAEM,KAAK,UAAU,qBAAqB,CAAC,MAAc,EAAE,MAAc;IACxE,OAAO,MAAM,gBAAM,CAAC,gBAAgB,CAAC,UAAU,CAAC;QAC9C,KAAK,EAAE;YACL,aAAa,EAAE;gBACb,MAAM;gBACN,MAAM;aACP;SACF;QACD,MAAM,EAAE;YACN,IAAI,EAAE,IAAI;SACX;KACF,CAAC,CAAA;AACJ,CAAC;AAEM,KAAK,UAAU,qBAAqB,CAAC,QAAgB,EAAE,SAAiB;IAC7E,OAAO,MAAM,gBAAM,CAAC,mBAAmB,CAAC,UAAU,CAAC;QACjD,KAAK,EAAE;YACL,wBAAwB,EAAE;gBACxB,SAAS;gBACT,cAAc,EAAE,QAAQ;aACzB;SACF;QACD,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,IAAI;YACX,KAAK,EAAE,IAAI;YACX,QAAQ,EAAE,IAAI;SACf;KACF,CAAC,CAAA;AACJ,CAAC;AAEM,KAAK,UAAU,gCAAgC,CAAC,QAAgB,EAAE,SAAiB,EAAE,IAA+B;IACzH,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAA;IACnC,OAAO,MAAM,gBAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC;QAC7C,KAAK,EAAE;YACL,wBAAwB,EAAE;gBACxB,SAAS;gBACT,cAAc,EAAE,QAAQ;aACzB;SACF;QACD,MAAM,EAAE;YACN,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,cAAc,EAAE,QAAQ;YACxB,SAAS,EAAE,SAAS;YACpB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB;QACD,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB;KACF,CAAC,CAAA;AACJ,CAAC;AAIM,KAAK,UAAU,sBAAsB,CAAC,QAAgB,EAAE,OAAe;IAC5E,OAAO,MAAM,gBAAM,CAAC,gBAAgB,CAAC,UAAU,CAAC;QAC9C,KAAK,EAAE;YACL,EAAE,EAAE,QAAQ;YACZ,MAAM,EAAE,OAAO;SAChB;QACD,MAAM,EAAE;YACN,IAAI,EAAE,IAAI;YACV,YAAY,EAAE;gBACZ,MAAM,EAAE;oBACN,IAAI,EAAE,IAAI;oBACV,KAAK,EAAE,IAAI;oBACX,SAAS,EAAE,IAAI;oBACf,QAAQ,EAAE,IAAI;oBACd,KAAK,EAAE,IAAI;oBACX,SAAS,EAAE,IAAI;iBAChB;aACF;YACD,mBAAmB,EAAE;gBACnB,MAAM,EAAE;oBACN,KAAK,EAAE,IAAI;oBACX,QAAQ,EAAE,IAAI;oBACd,KAAK,EAAE,IAAI;oBACX,QAAQ,EAAE,IAAI;oBACd,OAAO,EAAE;wBACP,MAAM,EAAE;4BACN,IAAI,EAAE,IAAI;4BACV,WAAW,EAAE,IAAI;yBAClB;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,MAAM,EAAE;oBACN,SAAS,EAAE,IAAI;oBACf,SAAS,EAAE,IAAI;oBACf,OAAO,EAAE,IAAI;oBACb,UAAU,EAAE,IAAI;oBAChB,QAAQ,EAAE,IAAI;iBACf;aACF;SACF;KACF,CAAC,CAAA;AACJ,CAAC;AAIM,KAAK,UAAU,kBAAkB,CAAC,OAAe,EAAE,MAAc,EAAE,IAAsB;IAE9F,OAAO,MAAM,gBAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC;QAC1C,IAAI,EAAE;YACJ,MAAM,EAAE,OAAO;YACf,MAAM;YACN,IAAI;SACL;KACF,CAAC,CAAA;AACJ,CAAC;AAEM,KAAK,UAAU,wBAAwB,CAAC,OAAe,EAAE,SAAiB;IAC/E,OAAO,MAAM,gBAAM,CAAC,mBAAmB,CAAC,QAAQ,CAAC;QAC/C,KAAK,EAAE;YACL,SAAS;YACT,QAAQ,EAAE,IAAI;YACd,gBAAgB,EAAE;gBAChB,MAAM,EAAE,OAAO;aAChB;SACF;QACD,MAAM,EAAE;YACN,EAAE,EAAE,IAAI;YACR,gBAAgB,EAAE;gBAChB,MAAM,EAAE;oBACN,YAAY,EAAE;wBACZ,MAAM,EAAE;4BACN,EAAE,EAAE,IAAI;4BACR,IAAI,EAAE,IAAI;4BACV,KAAK,EAAE,IAAI;yBACZ;qBACF;iBAEF;aACF;YACD,cAAc,EAAE,IAAI;YACpB,QAAQ,EAAE,IAAI;SACf;KACF,CAAC,CAAA;AACJ,CAAC;AAGM,KAAK,UAAU,kBAAkB,CAAC,MAAc,EAAE,MAAc;IACrE,OAAO,MAAM,gBAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC;QAC1C,KAAK,EAAE;YACL,aAAa,EAAE;gBACb,MAAM;gBACN,MAAM;aACP;SACF;QACD,IAAI,EAAE;YACJ,MAAM,EAAE,UAAU;SACnB;KACF,CAAC,CAAA;AACJ,CAAC","sourcesContent":["import type { CollaboratorRole } from \"@prisma/client\";\r\nimport prisma from \"../../libs/prisma\";\r\nimport type { EditServiceCollabFormData } from \"../schema/collaborator.schema\";\r\n\r\n\r\n\r\n\r\nexport async function getCollabId(storeId: number, userId: number) {\r\n  return await prisma.collaboratorShop.findUnique({\r\n    where: {\r\n      shopId_userId: {\r\n        shopId: storeId,\r\n        userId,\r\n      }\r\n    },\r\n    select: {\r\n      id: true,\r\n      status: true,\r\n    }\r\n  })\r\n}\r\n\r\n\r\nexport async function GetAllColaborators(storeId: number, userId: number, isAdmin: boolean) {\r\n  return await prisma.collaboratorShop.findMany({\r\n    where: {\r\n      shopId: storeId,\r\n      ...(isAdmin ? {} : { userId }), // se não for admin, só o próprio\r\n      status: \"ACCEPTED\",\r\n    },\r\n    select: {\r\n      id: true,\r\n      role: true,\r\n      createdAt: true,\r\n      Collaborator: {\r\n        select: {\r\n          id: true,\r\n          name: true,\r\n          shortName: true,\r\n          imageUrl: true,\r\n          email: true,\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport async function GetAllInvitesCollabs(storeId: number) {\r\n  return await prisma.collaboratorShop.findMany({\r\n    where: {\r\n      shopId: storeId,\r\n      status: \"PENDING\",\r\n    },\r\n    select: {\r\n      id: true,\r\n      role: true,\r\n      createdAt: true,\r\n      Collaborator: {\r\n        select: {\r\n          id: true,\r\n          email: true,\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport async function CheckRoleCollaborator(userId: number, shopId: number) {\r\n  return await prisma.collaboratorShop.findUnique({\r\n    where: {\r\n      shopId_userId: {\r\n        shopId,\r\n        userId,\r\n      }\r\n    },\r\n    select: {\r\n      role: true,\r\n    }\r\n  })\r\n}\r\n\r\nexport async function GetServiceCollabProps(coolabId: number, serviceId: number) {\r\n  return await prisma.collaboratorService.findUnique({\r\n    where: {\r\n      collaboratorId_serviceId: {\r\n        serviceId,\r\n        collaboratorId: coolabId,\r\n      },\r\n    },\r\n    select: {\r\n      duration: true,\r\n      price: true,\r\n      notes: true,\r\n      isActive: true,\r\n    }\r\n  })\r\n}\r\n\r\nexport async function CreateOrUpdateServiceCollabProps(coolabId: number, serviceId: number, data: EditServiceCollabFormData) {\r\n  console.log(\"CoolabId: \", coolabId)\r\n  return await prisma.collaboratorService.upsert({\r\n    where: {\r\n      collaboratorId_serviceId: {\r\n        serviceId,\r\n        collaboratorId: coolabId,\r\n      },\r\n    },\r\n    create: {\r\n      price: data.price,\r\n      notes: data.notes,\r\n      duration: data.duration,\r\n      collaboratorId: coolabId,\r\n      serviceId: serviceId,\r\n      isActive: data.isActive,\r\n    },\r\n    update: {\r\n      duration: data.duration,\r\n      isActive: data.isActive,\r\n      notes: data.notes,\r\n      price: data.price,\r\n    }\r\n  })\r\n}\r\n\r\n\r\n\r\nexport async function GetCollaboratorDetails(collabId: number, storeId: number) {\r\n  return await prisma.collaboratorShop.findUnique({\r\n    where: {\r\n      id: collabId,\r\n      shopId: storeId,\r\n    },\r\n    select: {\r\n      role: true,\r\n      Collaborator: {\r\n        select: {\r\n          name: true,\r\n          email: true,\r\n          createdAt: true,\r\n          imageUrl: true,\r\n          phone: true,\r\n          shortName: true,\r\n        },\r\n      },\r\n      CollaboratorService: {\r\n        select: {\r\n          price: true,\r\n          duration: true,\r\n          notes: true,\r\n          isActive: true,\r\n          Service: {\r\n            select: {\r\n              name: true,\r\n              description: true,\r\n            }\r\n          }\r\n        }\r\n      },\r\n      Schedule: {\r\n        select: {\r\n          dayOfWeek: true,\r\n          startTime: true,\r\n          endTime: true,\r\n          breakStart: true,\r\n          breakEnd: true,\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n\r\n\r\nexport async function CreateCollaborator(storeId: number, userId: number, role: CollaboratorRole) {\r\n\r\n  return await prisma.collaboratorShop.create({\r\n    data: {\r\n      shopId: storeId,\r\n      userId,\r\n      role,\r\n    }\r\n  })\r\n}\r\n\r\nexport async function GetAllCollabsFromService(storeId: number, serviceId: number) {\r\n  return await prisma.collaboratorService.findMany({\r\n    where: {\r\n      serviceId,\r\n      isActive: true,\r\n      CollaboratorShop: {\r\n        shopId: storeId,\r\n      }\r\n    },\r\n    select: {\r\n      id: true,\r\n      CollaboratorShop: {\r\n        select: {\r\n          Collaborator: {\r\n            select: {\r\n              id: true,\r\n              name: true,\r\n              email: true,\r\n            }\r\n          }\r\n\r\n        }\r\n      },\r\n      collaboratorId: true,\r\n      duration: true,\r\n    }\r\n  })\r\n}\r\n\r\n\r\nexport async function acceptInviteCollab(userId: number, shopId: number) {\r\n  return await prisma.collaboratorShop.update({\r\n    where: {\r\n      shopId_userId: {\r\n        shopId,\r\n        userId,\r\n      }\r\n    },\r\n    data: {\r\n      status: \"ACCEPTED\"\r\n    }\r\n  })\r\n}"]}