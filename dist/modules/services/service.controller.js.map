{"version":3,"file":"service.controller.js","sourceRoot":"/","sources":["modules/services/service.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import type { NextFunction, Request, Response } from \"express\";\r\nimport { CheckServiceIds, CreateService, getAllServices, getServiceById, GetServicesByCollaborator, updateImageUrlService, updateService, updateServiceOrder } from \"./service.service\";\r\nimport { BadRequestException, ConflictException } from \"../../commons/errors/custom.error\";\r\nimport type { EditServiceFormData } from \"./schema/update-service.schema\";\r\nimport type { CreateServiceFormData } from \"./schema/create-service.schema\";\r\nimport { PriceToCentsUtil } from \"../../utils/format\";\r\nimport { getCollabId } from \"../collaborator/collaborator.service\";\r\nimport { CheckAndGenerateServiceImageUrl, generateServiceSignedUrl } from \"../../utils/images/upload-image\";\r\nimport { deleteImageFromBucket } from \"../../libs/r2.lib\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport async function UpdateOrderServiceController(req: Request, res: Response, next: NextFunction) {\r\n  try {\r\n    const ids = req.body as number[];\r\n\r\n    const currentIds = await CheckServiceIds(req.storeId, ids);\r\n    if (currentIds.length !== ids.length) {\r\n      throw new ConflictException(\"Alguns serviços não pertencem a esta loja ou não existem\");\r\n    }\r\n\r\n    await updateServiceOrder(ids);\r\n    return res.status(200).json({ message: 'Ok' })\r\n  } catch (error) {\r\n    next(error)\r\n  }\r\n}\r\n\r\nexport async function GetAllServiceController(req: Request, res: Response, next: NextFunction) {\r\n  try {\r\n    console.log(req.storeId);\r\n    const services = await getAllServices(req.storeId);\r\n    return res.status(200).json(services);\r\n  } catch (error) {\r\n    next(error)\r\n  }\r\n}\r\n\r\nexport async function GetServiceByIdController(req: Request, res: Response, next: NextFunction) {\r\n  try {\r\n    const service = await getServiceById(req.storeId, Number(req.params.id));\r\n    if (service.imageUrl) {\r\n      service.imageUrl = service.imageUrl + `?v=${service.updatedAt}`\r\n    }\r\n    return res.status(200).json(service);\r\n  } catch (error) {\r\n    next(error)\r\n  }\r\n}\r\n\r\nexport async function UpdateServiceController(req: Request, res: Response, next: NextFunction) {\r\n  try {\r\n    const data = req.body as EditServiceFormData;\r\n\r\n    const service = await updateService(req.storeId, Number(req.params.id), data);\r\n\r\n    if (!service) {\r\n      throw new BadRequestException(\"Serviço nao encontrado\");\r\n    }\r\n\r\n    if (!data.hasChangeImage) {\r\n      return res.status(200).json({ message: 'Serviço atualizado com sucesso' });\r\n    }\r\n\r\n    //Modificou imagem\r\n\r\n    if (!data.image || !data.image.size || !data.image.type) {\r\n      //Eliminar imagem\r\n      await updateImageUrlService(req.storeId, service.id, null);\r\n      if (service.imageUrl) {\r\n        await deleteImageFromBucket(`${req.storeId}/service/${service.id}`);\r\n      }\r\n      return res.status(200).json({ message: 'Ok' });\r\n    }\r\n\r\n    const newImageUrl = await CheckAndGenerateServiceImageUrl(req.storeId, service.id, data.image);\r\n    if (!newImageUrl) {\r\n      throw new BadRequestException(\"Serviço atualizado, mas a imagem não é válida ou é muito grande\");\r\n    }\r\n    //Se a imagem é válida, verificar se já existe uma imagem\r\n    const newsignedUrl = await generateServiceSignedUrl(req.storeId, service.id, data.image.type);\r\n    if (!newsignedUrl) {\r\n      throw new BadRequestException(\"Serviço atualizado, mas não foi possível fazer upload da imagem\");\r\n    }\r\n\r\n    await updateImageUrlService(req.storeId, service.id, newImageUrl);\r\n\r\n\r\n    return res.status(200).json({ message: 'Serviço atualizado com sucesso', signedUrl: newsignedUrl });\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n}\r\n\r\n\r\nexport async function CreateServiceController(req: Request, res: Response, next: NextFunction) {\r\n  try {\r\n    const data = req.body as CreateServiceFormData;\r\n\r\n    const collab = await getCollabId(req.storeId, req.userId);\r\n\r\n    data.price = await PriceToCentsUtil(data.price);\r\n\r\n    const service = await CreateService(req.storeId, collab.id, data);\r\n\r\n    if (!service) {\r\n      throw new BadRequestException(\"Nao foi possivel criar o serviço\");\r\n    }\r\n\r\n    if (!data.hasChangeImage || !data.image || !data.image.size || !data.image.type) {\r\n      return res.status(200).json({ message: 'Serviço criado com sucesso' });\r\n    }\r\n\r\n    const newImageUrl = await CheckAndGenerateServiceImageUrl(req.storeId, service.id, data.image);\r\n    if (!newImageUrl) {\r\n      throw new BadRequestException(\"Serviço criado, mas a imagem não é válida ou é muito grande\");\r\n    }\r\n    //Se a imagem é válida, verificar se já existe uma imagem\r\n    const newsignedUrl = await generateServiceSignedUrl(req.storeId, service.id, data.image.type);\r\n    if (!newsignedUrl) {\r\n      throw new BadRequestException(\"Serviço criado, mas não foi possível fazer upload da imagem\");\r\n    }\r\n\r\n    await updateImageUrlService(req.storeId, service.id, newImageUrl);\r\n\r\n    return res.status(200).json({ message: 'Ok', signedUrl: newsignedUrl });\r\n\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n}\r\n\r\nexport async function GetServicesByCollaboratorController(req: Request, res: Response, next: NextFunction) {\r\n  try {\r\n    const { collabId } = req.params;\r\n    const services = await GetServicesByCollaborator(req.storeId, Number(collabId));\r\n    return res.status(200).json(services.CollaboratorService);\r\n  } catch (error) {\r\n    next(error)\r\n  }\r\n}"]}