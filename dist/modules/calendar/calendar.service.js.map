{"version":3,"file":"calendar.service.js","sourceRoot":"/","sources":["modules/calendar/calendar.service.ts"],"names":[],"mappings":";;;;;AAUA,kCAqCC;AAKD,kDAWC;AAED,8DAWC;AA5ED,+DAAuC;AAUhC,KAAK,UAAU,WAAW,CAAC,OAAe,EAAE,QAAgB,EAAE,SAAe,EAAE,OAAa;IACjG,OAAO,MAAM,gBAAM,CAAC,WAAW,CAAC,QAAQ,CAAC;QACvC,KAAK,EAAE;YACL,MAAM,EAAE,OAAO;YACf,IAAI,EAAE;gBACJ,EAAE,EAAE,QAAQ;aACb;YACD,KAAK,EAAE;gBACL,GAAG,EAAE,SAAS;gBACd,GAAG,EAAE,OAAO;aACb;SACF;QACD,MAAM,EAAE;YACN,EAAE,EAAE,IAAI;YACR,KAAK,EAAE,IAAI;YACX,GAAG,EAAE,IAAI;YACT,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,IAAI;YACZ,MAAM,EAAE;gBACN,MAAM,EAAE;oBACN,EAAE,EAAE,IAAI;oBACR,IAAI,EAAE,IAAI;oBACV,KAAK,EAAE,IAAI;oBACX,KAAK,EAAE,IAAI;oBACX,KAAK,EAAE,IAAI;iBACZ;aACF;YACD,OAAO,EAAE;gBACP,MAAM,EAAE;oBACN,EAAE,EAAE,IAAI;oBACR,IAAI,EAAE,IAAI;oBACV,WAAW,EAAE,IAAI;oBACjB,KAAK,EAAE,IAAI;iBACZ;aACF;SACF;KACF,CAAC,CAAA;AACJ,CAAC;AAKM,KAAK,UAAU,mBAAmB,CAAC,OAAe,EAAE,IAAmB;IAC5E,OAAO,MAAM,gBAAM,CAAC,WAAW,CAAC,MAAM,CAAC;QACrC,KAAK,EAAE;YACL,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;YACnB,MAAM,EAAE,OAAO;SAChB;QACD,IAAI,EAAE;YACJ,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,GAAG,EAAE,IAAI,CAAC,GAAG;SACd;KACF,CAAC,CAAA;AACJ,CAAC;AAEM,KAAK,UAAU,yBAAyB,CAAC,OAAe,EAAE,EAAU,EAAE,IAA0C;IACrH,OAAO,MAAM,gBAAM,CAAC,WAAW,CAAC,MAAM,CAAC;QACrC,KAAK,EAAE;YACL,EAAE;YACF,MAAM,EAAE,OAAO;SAChB;QACD,IAAI,EAAE;YACJ,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,GAAG,EAAE,IAAI,CAAC,GAAG;SACd;KACF,CAAC,CAAA;AACJ,CAAC","sourcesContent":["import prisma from \"../../libs/prisma\";\r\nimport type { UpdateScheduleStoreFormData } from \"../shop/schema/update-schedule.schema\";\r\nimport type { CalendarEvent } from \"./calendar.controller\";\r\nimport type { CreateEventFormData } from \"./schema/create-appointment\";\r\nimport type { UpdatePositionAppointmentSchemaProps } from \"./schema/update-position.schema\";\r\nimport type { AppointmentType } from \"./types/appointment.type\";\r\n\r\n\r\n\r\n\r\nexport async function GetCalendar(storeId: number, collabId: number, startDate: Date, endDate: Date) {\r\n  return await prisma.appointment.findMany({\r\n    where: {\r\n      shopId: storeId,\r\n      User: {\r\n        id: collabId,\r\n      },\r\n      start: {\r\n        gte: startDate,\r\n        lte: endDate,\r\n      },\r\n    },\r\n    select: {\r\n      id: true,\r\n      start: true,\r\n      end: true,\r\n      duration: true,\r\n      status: true,\r\n      Client: {\r\n        select: {\r\n          id: true,\r\n          name: true,\r\n          email: true,\r\n          notes: true,\r\n          phone: true,\r\n        }\r\n      },\r\n      Service: {\r\n        select: {\r\n          id: true,\r\n          name: true,\r\n          description: true,\r\n          color: true,\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\nexport async function UpdateCalendarEvent(storeId: number, data: CalendarEvent) {\r\n  return await prisma.appointment.update({\r\n    where: {\r\n      id: Number(data.id),\r\n      shopId: storeId,\r\n    },\r\n    data: {\r\n      start: data.start,\r\n      end: data.end,\r\n    }\r\n  })\r\n}\r\n\r\nexport async function UpdatePositionAppointment(storeId: number, id: number, data: UpdatePositionAppointmentSchemaProps) {\r\n  return await prisma.appointment.update({\r\n    where: {\r\n      id,\r\n      shopId: storeId,\r\n    },\r\n    data: {\r\n      start: data.start,\r\n      end: data.end,\r\n    }\r\n  })\r\n}\r\n\r\n"]}