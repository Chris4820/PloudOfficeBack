{"version":3,"file":"calendar.service.js","sourceRoot":"/","sources":["modules/calendar/calendar.service.ts"],"names":[],"mappings":"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","sourcesContent":["import prisma from \"../../libs/prisma\";\r\nimport type { UpdateScheduleStoreFormData } from \"../shop/schema/update-schedule.schema\";\r\nimport type { CalendarEvent } from \"./calendar.controller\";\r\nimport type { CreateEventFormData } from \"./schema/create-appointment\";\r\nimport type { UpdatePositionAppointmentSchemaProps } from \"./schema/update-position.schema\";\r\nimport type { AppointmentType } from \"./types/appointment.type\";\r\n\r\n\r\n\r\n\r\nexport async function GetCalendar(storeId: number, startDate: Date, endDate: Date) {\r\n  return await prisma.appointment.findMany({\r\n    where: {\r\n      shopId: storeId,\r\n      start: {\r\n        gte: startDate,\r\n        lte: endDate,\r\n      },\r\n    },\r\n    select: {\r\n      id: true,\r\n      start: true,\r\n      end: true,\r\n      duration: true,\r\n      Client: {\r\n        select: {\r\n          id: true,\r\n          name: true,\r\n          email: true,\r\n          notes: true,\r\n          phone: true,\r\n        }\r\n      },\r\n      Service: {\r\n        select: {\r\n          id: true,\r\n          name: true,\r\n          description: true,\r\n          color: true,\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\nexport async function UpdateCalendarEvent(storeId: number, data: CalendarEvent) {\r\n  return await prisma.appointment.update({\r\n    where: {\r\n      id: Number(data.id),\r\n      shopId: storeId,\r\n    },\r\n    data: {\r\n      start: data.start,\r\n      end: data.end,\r\n    }\r\n  })\r\n}\r\n\r\nexport async function UpdatePositionAppointment(storeId: number, id: number, data: UpdatePositionAppointmentSchemaProps) {\r\n  return await prisma.appointment.update({\r\n    where: {\r\n      id,\r\n      shopId: storeId,\r\n    },\r\n    data: {\r\n      start: data.start,\r\n      end: data.end,\r\n    }\r\n  })\r\n}\r\n\r\nexport async function CreateAppointment(storeId: number, data: AppointmentType, dataProps: CreateEventFormData) {\r\n  return await prisma.appointment.create({\r\n    data: {\r\n      Shop: {\r\n        connect: {\r\n          id: storeId\r\n        }\r\n      },\r\n      User: {\r\n        connect: {\r\n          id: data.collabId\r\n        }\r\n      },\r\n      Client: {\r\n        connectOrCreate: {\r\n          where: {\r\n            email: dataProps.Client.email\r\n          },\r\n          create: {\r\n            name: dataProps.Client.name,\r\n            email: dataProps.Client.email,\r\n            notes: dataProps.Client.notes,\r\n            updatedAt: new Date(),\r\n            Shop: {\r\n              connect: {\r\n                id: storeId\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      Service: {\r\n        connect: {\r\n          id: data.serviceId,\r\n        }\r\n      },\r\n      end: data.end,\r\n      price: 15,\r\n      duration: data.duration,\r\n      start: data.start,\r\n    }\r\n  });\r\n}\r\n\r\n"]}