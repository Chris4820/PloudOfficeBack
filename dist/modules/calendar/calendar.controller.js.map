{"version":3,"file":"calendar.controller.js","sourceRoot":"/","sources":["modules/calendar/calendar.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import type { NextFunction, Request, Response } from \"express\";\r\nimport { CreateAppointment, GetCalendar, UpdateCalendarEvent, UpdatePositionAppointment } from \"./calendar.service\";\r\nimport { endOfDay, isAfter, startOfDay } from \"date-fns\";\r\nimport type { GetEventsCalendarSchemaProps } from \"./schema/get-calendar.schema\";\r\nimport { BadRequestException } from \"../../commons/errors/custom.error\";\r\nimport type { UpdateScheduleStoreFormData } from \"../shop/schema/update-schedule.schema\";\r\nimport type { UpdatePositionAppointmentSchemaProps } from \"./schema/update-position.schema\";\r\nimport type { CreateEventFormData } from \"./schema/create-appointment\";\r\nimport type { AppointmentType } from \"./types/appointment.type\";\r\n\r\n\r\n\r\n\r\nexport async function GetCalendarController(req: Request, res: Response, next: NextFunction) {\r\n  try {\r\n    const data = req.body as GetEventsCalendarSchemaProps\r\n\r\n\r\n    if (isAfter(data.start, data.end)) {\r\n      throw new BadRequestException('Data de ínicio nao pode ser depois da data de fim');\r\n    }\r\n\r\n    const appointment = await GetCalendar(req.storeId, new Date(data.start), new Date(data.end));\r\n    return res.status(200).json(appointment)\r\n  } catch (error) {\r\n    next(error)\r\n  }\r\n}\r\n\r\nexport interface CalendarEvent {\r\n  id: string\r\n  title: string\r\n  description?: string\r\n  start: Date\r\n  end: Date\r\n  Service: {\r\n    id: string,\r\n    name: string,\r\n  },\r\n  Clients: {\r\n    id: number;\r\n    notes?: string;\r\n    name: string;\r\n    email?: string;\r\n    phone?: string;\r\n  };\r\n}\r\n\r\nexport async function UpdateCalendarController(req: Request, res: Response, next: NextFunction) {\r\n  try {\r\n    const data = req.body as CalendarEvent;\r\n\r\n    console.log(data);\r\n\r\n    await UpdateCalendarEvent(req.storeId, data);\r\n    return res.status(200).json({ message: 'Ok' })\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n}\r\n\r\n\r\nexport async function UpdatePositionAppointmentController(req: Request, res: Response, next: NextFunction) {\r\n  try {\r\n    const data = req.body as UpdatePositionAppointmentSchemaProps;\r\n    await UpdatePositionAppointment(req.storeId, Number(req.params.id), data);\r\n    if (data.notificationClient) {\r\n      //Notificar cliente por email da mudança\r\n    }\r\n    return res.status(200).json({ message: 'Ok' })\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n}\r\n\r\nexport async function CreateAppoitmentController(req: Request, res: Response, next: NextFunction) {\r\n  try {\r\n    const data = req.body as CreateEventFormData;\r\n\r\n    console.log(\"Començando em: \" + data.start);\r\n\r\n    const endDate = new Date(data.start);\r\n    endDate.setMinutes(endDate.getMinutes() + data.duration); // N é o número de minutos a adicionar\r\n\r\n    const CreateAppointmentProps: AppointmentType = {\r\n      collabId: data.collabId,\r\n      duration: data.duration,\r\n      end: endDate,\r\n      start: data.start,\r\n      serviceId: data.serviceId,\r\n    }\r\n    await CreateAppointment(req.storeId, CreateAppointmentProps, data);\r\n    return res.status(201).json({ message: 'Ok' });\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n}"]}