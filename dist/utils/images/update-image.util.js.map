{"version":3,"file":"update-image.util.js","sourceRoot":"/","sources":["utils/images/update-image.util.ts"],"names":[],"mappings":";;AASA,gDAoDC;AA7DD,oEAAwE;AACxE,8CAA0D;AAC1D,4EAA+E;AAC/E,6CAAoF;AAM7E,KAAK,UAAU,kBAAkB,CACtC,IAA8D,EAC9D,eAAmC,EACnC,cAAuB,EACvB,KAGC,EACD,EAAU,EACV,OAAgB;IAGhB,IAAI,CAAC,cAAc,EAAE,CAAC;QACpB,OAAO;IACT,CAAC;IAED,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC;QAC5E,MAAM,IAAA,4BAAe,EAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;QAC/D,MAAM,WAAW,GAAG,MAAM,IAAA,6BAAgB,EAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QACxD,MAAM,SAAS,GAAG,MAAM,IAAA,8BAAiB,EAAC,OAAO,EAAE,EAAE,EAAE,WAAW,CAAC,CAAC;QACpE,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,MAAM,IAAI,kCAAmB,CAAC,4BAA4B,CAAC,CAAC;QAC9D,CAAC;QACD,QAAQ,IAAI,EAAE,CAAC;YACb,KAAK,SAAS;gBACZ,MAAM,IAAA,uCAAqB,EAAC,OAAO,EAAE,EAAE,EAAE,WAAW,CAAC,CAAC;gBACtD,MAAM;YACR,oBAAoB;YACpB;gBACE,MAAM,IAAI,kCAAmB,CAAC,6DAA6D,CAAC,CAAC;QACjG,CAAC;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;SAAM,CAAC;QACN,uCAAuC;QACvC,IAAI,eAAe,EAAE,CAAC;YACpB,QAAQ,IAAI,EAAE,CAAC;gBACb,KAAK,SAAS;oBACZ,MAAM,IAAA,uCAAqB,EAAC,OAAO,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;oBAC/C,MAAM;gBACR,oBAAoB;gBACpB;oBACE,MAAM,IAAI,kCAAmB,CAAC,6DAA6D,CAAC,CAAC;YACjG,CAAC;YACD,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,eAAe,CAAC,CAAC;YACrC,wDAAwD;YACxD,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC7B,wDAAwD;YACxD,MAAM,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,6BAA6B;YACpE,IAAA,8BAAqB,EAAC,GAAG,CAAC,CAAC;QAC7B,CAAC;IACH,CAAC;IACD,OAAO;AACT,CAAC","sourcesContent":["import { BadRequestException } from \"../../commons/errors/custom.error\";\r\nimport { deleteImageFromBucket } from \"../../libs/r2.lib\";\r\nimport { updateImageUrlService } from \"../../modules/services/service.service\";\r\nimport { CheckPropsImage, generateImageUrl, generateSignedUrl } from \"./image.util\";\r\n\r\n\r\n\r\n\r\n\r\nexport async function updateImageIfExist(\r\n  type: 'service' | 'storeLogo' | 'storeBackground' | 'userLogo',\r\n  currentImageUrl: string | undefined,\r\n  hasChangeImage: boolean,\r\n  image: {\r\n    size?: number,\r\n    type?: string,\r\n  },\r\n  id: number,\r\n  storeId?: number,\r\n\r\n): Promise<string | undefined> {\r\n  if (!hasChangeImage) {\r\n    return;\r\n  }\r\n\r\n  if (typeof image === 'object' && image !== null && image.size && image.type) {\r\n    await CheckPropsImage(image.size, image.type, 5 * 1024 * 1024);\r\n    const newImageUrl = await generateImageUrl(storeId, id);\r\n    const signedUrl = await generateSignedUrl(storeId, id, newImageUrl);\r\n    if (!signedUrl) {\r\n      throw new BadRequestException(\"Erro ao criar chave imagem\");\r\n    }\r\n    switch (type) {\r\n      case \"service\":\r\n        await updateImageUrlService(storeId, id, newImageUrl);\r\n        break;\r\n      //Fazer restantes...\r\n      default:\r\n        throw new BadRequestException(\"Não foi possivel atualizar a imagem, pois o tipo nao existe\");\r\n    }\r\n    return signedUrl;\r\n  } else {\r\n    //Sem imagem, apagar a atual se existir\r\n    if (currentImageUrl) {\r\n      switch (type) {\r\n        case \"service\":\r\n          await updateImageUrlService(storeId, id, null);\r\n          break;\r\n        //Fazer restantes...\r\n        default:\r\n          throw new BadRequestException(\"Não foi possivel atualizar a imagem, pois o tipo nao existe\");\r\n      }\r\n      const url = new URL(currentImageUrl);\r\n      // Remover o parâmetro 'v' da query string (se presente)\r\n      url.searchParams.delete('v');\r\n      // O caminho após o domínio é a chave do objeto (urlKey)\r\n      const key = url.pathname.substring(1); // remove a barra inicial \"/\"\r\n      deleteImageFromBucket(key);\r\n    }\r\n  }\r\n  return;\r\n}"]}